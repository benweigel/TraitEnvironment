data = FDenv, control=lmeControl(opt="optim"))
# Inspect summary statistics
summary(fitTL$lme)
summary(fitTL$gam)
par(mfrow=c(4,2),mar=c(4,4,0.2,0.2))
plot(fitTL$gam,shade=T,shade.col="grey",res=T,rug=F,pch=20)
par(mfrow=c(1,1),mar=c(5,4,2,2))
?uGamm
?uGamm()
results <- dredge(fitTL, m.lim=c(1,4), rank="AICc") # Here test max 4 variables per model to reduce run time
subset(results, delta <5)  # Depth, SBT and fishing are key variables
# Calculate and view relative variable importance (RVI) scores
importance(results)
?randomForest
# Wrapper function to explore RF for a given trait
funRf<-function(Var){
colnames(FDenv)[which(colnames(FDenv)==Var)]<-"Var"
fit<-randomForest(Var~Depth+SBT+SBS+Chl+SBT_sea+Chl_sea+Fishing, data=FDenv,ntree=1000,importance=T, mtry=2)
par(mfrow=c(4,2),mar=c(4,4,0.2,0.2))
partialPlot(fit, x.var=Depth,FDenv,main="")
partialPlot(fit, x.var=SBT,FDenv,main="")
partialPlot(fit, x.var=SBS,FDenv,main="")
partialPlot(fit, x.var=Chl,FDenv,main="")
partialPlot(fit, x.var=SBT_sea,FDenv,main="")
partialPlot(fit, x.var=Chl_sea,FDenv,main="")
partialPlot(fit, x.var=Fishing,FDenv,main="")
par(mfrow=c(1,1),mar=c(5,4,2,2))
return(print(fit))
}
Metrics[9]
```{r}
funRf(Metrics[9])# Plot random forest response plots and summary stats
# Wrapper function to explore RF for a given trait
funRf<-function(Var){
colnames(FDenv)[which(colnames(FDenv)==Var)]<-"Var"
fit<-randomForest(Var~Depth+SBT+SBS+Chl+SBT_sea+Chl_sea+Fishing, data=FDenv,ntree=1000,importance=T, mtry=2)
par(mfrow=c(4,2),mar=c(4,4,0.2,0.2))
partialPlot(fit, x.var=Depth,FDenv,main="")
partialPlot(fit, x.var=SBT,FDenv,main="")
partialPlot(fit, x.var=SBS,FDenv,main="")
partialPlot(fit, x.var=Chl,FDenv,main="")
partialPlot(fit, x.var=SBT_sea,FDenv,main="")
partialPlot(fit, x.var=Chl_sea,FDenv,main="")
partialPlot(fit, x.var=Fishing,FDenv,main="")
par(mfrow=c(1,1),mar=c(5,4,2,2))
return(fit)
}
fitTLrf <- funRf(Metrics[9])# Plot random forest response plots and summary stats
plot(fitTLrf)# Plot random forest response plots and summary stats
print(fitTLrf) # Inspect summary stats
varImpPlot(fitTLrf)
library(nlme)
fitTLglm <- lme(CWM.Trophic.level~Depth+SBT+SBS+Chl+SBT_sea+Chl_sea+Fishing,
random = list(dummy=~1), correlation = corGaus(form = ~ lon+lat), # Can try other error structures
data = FDenv, control=lmeControl(opt="optim"))
summary(fitTLglm)
anova(fitTLglm)
# Extract parameters
str(summary(fitTLglm))
summary(fitTLglm)$coefficients
##Plot some diagnostics
plot(fitTLglm)
qqnorm(residuals(fitTLglm))
#observed versus fitted values
plot(fitTLglm, CWM.Trophic.level~ fitted(.), abline = c(0,1))
knitr::opts_chunk$set(echo = TRUE)
CA_on_Abun <- ade4::dudi.coa(abu, scannf = F)
Step1_CCA_on_env <- ade4::pcaiv(CA_on_Abun, envR, scannf = F, nf = ncol(env)) # CCA1
CA_on_Abun <- ade4::dudi.coa(abu, scannf = F)
Step1_CCA_on_env <- ade4::pcaiv(CA_on_Abun, env, scannf = F, nf = ncol(env)) # CCA1
# Obtain from this analysis,
#           an m × q^* table of scores (S^* say) with q^* the rank of the environmental data,
S_star <- Step1_CCA_on_env$co
# By definition, S_star contains species-niche centroids
#   with respect to orthonormalized environmental variables
dim(S_star) # species by environmental variables (mxq*) with q* = number of env. vars if env. vars are of full rank
q_star <- ncol(S_star)
# step 2. Weighted RDA(S^*~Traits):
#         an RDA of S^* on the trait variables,
#            using species weights K = colSums(Y) or K/sum(K),
#            given by Step1_CCA_on_env$cw
#
# Note that the total weighted variation analysed in this step
#  is equal to the sum of the CCA eigenvalues in step 1
abs(sum(S_star^2 * Step1_CCA_on_env$cw) - sum(Step1_CCA_on_env$eig)) < 1.e-12
#
# weighted RDA(S^*~Traits)  in ade4:
pca_S_star <- ade4::dudi.pca(S_star, row.w = Step1_CCA_on_env$cw, scale = FALSE, scannf = FALSE, nf = ncol(S_star))
Step2_wrRDA_SNC_on_Traits <- ade4::pcaiv(pca_S_star, trait, scannf = FALSE, nf = ncol(trait))
#
# Note that the eigenvalues of this weigthed RDA are equal to the dc-CA eigenvalues
abs(Step2_wrRDA_SNC_on_Traits$eig - eig.dcCA)<1.e-12
# step 2. Weighted RDA(S^*~Traits):
#         an RDA of S^* on the trait variables,
#            using species weights K = colSums(Y) or K/sum(K),
#            given by Step1_CCA_on_env$cw
#
# Note that the total weighted variation analysed in this step
#  is equal to the sum of the CCA eigenvalues in step 1
abs(sum(S_star^2 * Step1_CCA_on_env$cw) - sum(Step1_CCA_on_env$eig)) < 1.e-12
#
# weighted RDA(S^*~Traits)  in ade4:
pca_S_star <- ade4::dudi.pca(S_star, row.w = Step1_CCA_on_env$cw, scale = FALSE, scannf = FALSE, nf = ncol(S_star))
Step2_wrRDA_SNC_on_Traits <- ade4::pcaiv(pca_S_star, trait, scannf = FALSE, nf = ncol(trait))
#
# It is of interest to express these eigenvalues
# as fraction of the environmentally structured variation
# which was obtained in step 1
# The fraction of environmentally structured variation
#  explained by the traits is
R2_Env_variation_explained_by_Traits <- sum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig)
# per axis
Fraction_env_structured_variation_explained_by_traits <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig) #
names_axes <- paste("Axis",seq_along(Step2_wrRDA_SNC_on_Traits$eig))
names(Fraction_env_structured_variation_explained_by_traits)<- names_axes
# Species-level significance test
Species_level_test <- randtest(Step2_wrRDA_SNC_on_Traits, nrepet = nrepet)
Step2_wrRDA_SNC_on_Traits$eig
library(ade4)
nrepet <- 999  # number of permutations in tests
# step 2. Weighted RDA(S^*~Traits):
#         an RDA of S^* on the trait variables,
#            using species weights K = colSums(Y) or K/sum(K),
#            given by Step1_CCA_on_env$cw
#
# Note that the total weighted variation analysed in this step
#  is equal to the sum of the CCA eigenvalues in step 1
abs(sum(S_star^2 * Step1_CCA_on_env$cw) - sum(Step1_CCA_on_env$eig)) < 1.e-12
#
# weighted RDA(S^*~Traits)  in ade4:
pca_S_star <- ade4::dudi.pca(S_star, row.w = Step1_CCA_on_env$cw, scale = FALSE, scannf = FALSE, nf = ncol(S_star))
Step2_wrRDA_SNC_on_Traits <- ade4::pcaiv(pca_S_star, trait, scannf = FALSE, nf = ncol(trait))
#
# It is of interest to express these eigenvalues
# as fraction of the environmentally structured variation
# which was obtained in step 1
# The fraction of environmentally structured variation
#  explained by the traits is
R2_Env_variation_explained_by_Traits <- sum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig)
# per axis
Fraction_env_structured_variation_explained_by_traits <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig) #
names_axes <- paste("Axis",seq_along(Step2_wrRDA_SNC_on_Traits$eig))
names(Fraction_env_structured_variation_explained_by_traits)<- names_axes
# Species-level significance test
Species_level_test <- randtest(Step2_wrRDA_SNC_on_Traits, nrepet = nrepet)
Species_level_test
p_value_species_level_test <- Species_level_test$pvalue
# step 3. CCA(t(Y) ~Traits):
#         a CCA of the transposed community table on to the traits
#
# the standard way of doing a CCA in ade4:
CA_on_Abun.t <- ade4::dudi.coa(t(abuL), scannf = F)
# step 3. CCA(t(Y) ~Traits):
#         a CCA of the transposed community table on to the traits
#
# the standard way of doing a CCA in ade4:
CA_on_Abun.t <- ade4::dudi.coa(t(abu), scannf = F)
Step3_CCA_on_traits <- ade4::pcaiv(CA_on_Abun.t, trait, scannf = F, nf = ncol(trait)) # CCA2
# the CCA eigenvalues (canonical eigenvalues)
Step3_CCA_on_traits$eig
# Obtain from this analysis,
#           an n × p^* table of scores (R^* say) with p^* the rank of the trait data,
R_star <- Step3_CCA_on_traits$co
# By definition, R_star contains community-weighted means (CWM)
#   with respect to orthonormalized trait variables
dim(R_star) # samples by traits (nxp*) with p* = number of traits if traits are of full rank
p_star <- qr(model.matrix(~ as.matrix(trait)))$rank-1
# if Traits is of full rank (and without factors): qr(Traits.m)$rank-1 == ncol(Traits)
#check
p_star - ncol(R_star) == 0
# step 4. Weighted RDA(R^*~Env):
#         an RDA of R^* on the environmental variables,
#         using sample weights R = rowSums(Y) or R/sum(R),
#         given by Step1_CCA_on_env$lw.
#
# Note that the total weighted variation analysed in this step
#  is equal to the sum of the CCA eigenvalues in step 3
abs(sum(R_star^2 * Step1_CCA_on_env$lw) - sum(Step3_CCA_on_traits$eig)) < 1.e-12
#
# weighted RDA(R^*~Env)  in ade4:
pca_R_star <- dudi.pca(R_star, row.w = Step1_CCA_on_env$lw, scale = FALSE, scannf = FALSE, nf = ncol(R_star))
Step4_wRDA_CWM_on_Env <- pcaiv(pca_R_star, envR, scannf = FALSE, nf = ncol(envR))
# step 4. Weighted RDA(R^*~Env):
#         an RDA of R^* on the environmental variables,
#         using sample weights R = rowSums(Y) or R/sum(R),
#         given by Step1_CCA_on_env$lw.
#
# Note that the total weighted variation analysed in this step
#  is equal to the sum of the CCA eigenvalues in step 3
abs(sum(R_star^2 * Step1_CCA_on_env$lw) - sum(Step3_CCA_on_traits$eig)) < 1.e-12
#
# weighted RDA(R^*~Env)  in ade4:
pca_R_star <- dudi.pca(R_star, row.w = Step1_CCA_on_env$lw, scale = FALSE, scannf = FALSE, nf = ncol(R_star))
Step4_wRDA_CWM_on_Env <- pcaiv(pca_R_star, env, scannf = FALSE, nf = ncol(env))
#
# Note that the eigenvalues of this weigthed RDA are equal to the dc-CA eigenvalues
abs(Step4_wRDA_CWM_on_Env$eig - eig.dcCA)<1.e-12
# step 4. Weighted RDA(R^*~Env):
#         an RDA of R^* on the environmental variables,
#         using sample weights R = rowSums(Y) or R/sum(R),
#         given by Step1_CCA_on_env$lw.
#
# Note that the total weighted variation analysed in this step
#  is equal to the sum of the CCA eigenvalues in step 3
abs(sum(R_star^2 * Step1_CCA_on_env$lw) - sum(Step3_CCA_on_traits$eig)) < 1.e-12
#
# weighted RDA(R^*~Env)  in ade4:
pca_R_star <- dudi.pca(R_star, row.w = Step1_CCA_on_env$lw, scale = FALSE, scannf = FALSE, nf = ncol(R_star))
Step4_wRDA_CWM_on_Env <- pcaiv(pca_R_star, env, scannf = FALSE, nf = ncol(env))
#
# Note that the eigenvalues of this weigthed RDA are equal to the dc-CA eigenvalues
abs(Step4_wRDA_CWM_on_Env$eig - Step2_wrRDA_SNC_on_Traits$eig)<1.e-12
eig24 <- rbind(Step2_wrRDA_SNC_on_Traits$eig, Step4_wRDA_CWM_on_Env$eig)
rownames(eig24) <- paste("eigenvalues step ", c(2,4))
colnames(eig24) <- names_axes
# It is of interest to express these eigenvalues
# as fraction of the trait structured variation
# which was obtained in step 3
Step4_wRDA_CWM_on_Env$eig/sum(Step3_CCA_on_traits$eig) #
# The fraction of trait-structured variation
#  explained by the environmental variables is thus
R2_Trait_variation_explained_by_Env <- sum(Step4_wRDA_CWM_on_Env$eig)/sum(Step3_CCA_on_traits$eig)
# expressed as percentage
#round(100*R2_Trait_variation_explained_by_Env,1)
Fraction_trait_structured_variation_explained_by_env <- cumsum(Step4_wRDA_CWM_on_Env$eig)/sum(Step3_CCA_on_traits$eig) #
names(Fraction_trait_structured_variation_explained_by_env)<- names_axes
# sample-level test
Sample_level_test <- randtest(Step4_wRDA_CWM_on_Env, nrepet = nrepet)
Sample_level_test
p_value_sample_level_test <- Sample_level_test$pvalue
# step 6: clue steps together -------------------------------------------
eig <- Step2_wrRDA_SNC_on_Traits$eig
rFC <- sqrt(eig)
Chessels_correlation_ratio <- sqrt(Step2_wrRDA_SNC_on_Traits$eig/CA_on_Abun$eig[seq_along(Step2_wrRDA_SNC_on_Traits$eig)])
Explained_variance =  cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(CA_on_Abun$eig)
Explained_fitted_variation_cumulative <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step2_wrRDA_SNC_on_Traits$eig)
# final p-value
# p_max : maximum of p-values of the sample-level test and species-level test
p_max_dcCA <- max(c(p_value_sample_level_test, p_value_species_level_test))
# Environmental efficiencies of trait-structured variation:
# expressing how well do the environmental variables explain
# the trait-structured variation
# per eigenvector
adpa2 <- adj_R2(Fraction_trait_structured_variation_explained_by_env, n = nrow(R_star), df = q_star)
# Output:
cat("\nStep 1: CCA(Y ~ Env)\n")
# the standard way of doing a CCA in ade4:
# the eigenvalues of CCA of Y on Env (canonical eigenvalues)
cat("Eigenvalues of CCA of abundance table on Env (canonical eigenvalues)\n", round(Step1_CCA_on_env$eig,3), "\n")
Exp_var_by_Env <- sum(Step1_CCA_on_env$eig)/sum(CA_on_Abun$eig)
cat("Percent variation in abundances explained by the Environmental variables:\n R2 =", round(100*Exp_var_by_Env,2), "\n")
# adj R2
Step1_adjR2 <- adj_R2(cumsum(Step1_CCA_on_env$eig)/sum(CA_on_Abun$eig), n = nrow(envR), df = Step1_CCA_on_env$rank)
names(Step1_adjR2)<- paste("Axis", seq_len(Step1_CCA_on_env$rank))
#cat("Percent variation in abundances explained by the Environmental variables\n")
cat(" adj R2 =",
round(100* adj_R2(Exp_var_by_Env, n = nrow(envR), df = Step1_CCA_on_env$rank),2)   , "\n")
cat("Cumulatively across axes:\n")
print(round(100* Step1_adjR2,2))
{
#cat("Percent variation in abundances explained by the Environmental variables\n")
cat(" adj R2 =",
round(100* adj_R2(Exp_var_by_Env, n = nrow(envR), df = Step1_CCA_on_env$rank),2)   , "\n")
cat("Cumulatively across axes:\n")
print(round(100* Step1_adjR2,2))
}
cat("\nStep 2: weighted RDA(SNC~Traits)\n")
{
cat("Environmentally structured variation explained by traits:\n")
cat(" R2 =",round(100*R2_Env_variation_explained_by_Traits,1),"\n")
cat(" adj R2 =",
round(100* adj_R2(R2_Env_variation_explained_by_Traits, n = nrow(S_star), df = p_star),2)   , "\n")
cat("Cumulatively across axes:\n")
print(round(100* adpa1,2))
cat("Ratio of double (T,E) vs single (E) constrained eigenvalues\n (efficiency of the traits to explain\n  the environmentally structured variation) :\n")
print(round(eff1,2))
cat("P-value of the species-level test in dc-CA\n",p_value_species_level_test ,"\n")
}
library(ade4)
nrepet <- 999  # number of permutations in tests
adj_R2 <- function(R2_fraction, n, df){1-(1-R2_fraction)*(n-1)/(n-df-1)}
# Align the direction of the axes by comparing the canonical/regression coefficients
#   already computed  in step 2 with those that follow from steps 3 and 4
Step4_wRDA_CWM_on_Env <- Align_axes(Step2_wrRDA_SNC_on_Traits,Step3_CCA_on_traits,Step4_wRDA_CWM_on_Env)
cat("\n\n traits and species plots (from step 2: wRDA(SNC~Traits))\n")
ade4:::plot.pcaiv(Step2_wrRDA_SNC_on_Traits)
ade4:::plot.pcaiv(Step2_wrRDA_SNC_on_Traits)
cat("\n environmental variables and sample plots (from step 4: wRDA(CWM~Env))\n")
ade4:::plot.pcaiv(Step4_wRDA_CWM_on_Env)
# Align the direction of the axes by comparing the canonical/regression coefficients
#   already computed  in step 2 with those that follow from steps 3 and 4
Step4_wRDA_CWM_on_Env <- Align_axes(Step2_wrRDA_SNC_on_Traits,Step3_CCA_on_traits,Step4_wRDA_CWM_on_Env)
# the standard way of doing a CCA in ade4:
# the eigenvalues of CCA of Y on Env (canonical eigenvalues)
cat("Eigenvalues of CCA of abundance table on Env (canonical eigenvalues)\n", round(Step1_CCA_on_env$eig,3), "\n")
cat("Percent variation in abundances explained by the Environmental variables:\n R2 =", round(100*Exp_var_by_Env,2), "\n")
# adj R2
Step1_adjR2 <- adj_R2(cumsum(Step1_CCA_on_env$eig)/sum(CA_on_Abun$eig), n = nrow(envR), df = Step1_CCA_on_env$rank)
names(Step1_adjR2)<- paste("Axis", seq_len(Step1_CCA_on_env$rank))
# adj R2
Step1_adjR2 <- adj_R2(cumsum(Step1_CCA_on_env$eig)/sum(CA_on_Abun$eig), n = nrow(envR), df = Step1_CCA_on_env$rank)
# adj R2
Step1_adjR2 <- adj_R2(cumsum(Step1_CCA_on_env$eig)/sum(CA_on_Abun$eig), n = nrow(env), df = Step1_CCA_on_env$rank)
names(Step1_adjR2)<- paste("Axis", seq_len(Step1_CCA_on_env$rank))
#cat("Percent variation in abundances explained by the Environmental variables\n")
cat(" adj R2 =",
round(100* adj_R2(Exp_var_by_Env, n = nrow(envR), df = Step1_CCA_on_env$rank),2)   , "\n")
#cat("Percent variation in abundances explained by the Environmental variables\n")
cat(" adj R2 =",
round(100* adj_R2(Exp_var_by_Env, n = nrow(env), df = Step1_CCA_on_env$rank),2)   , "\n")
cat("Cumulatively across axes:\n")
print(round(100* Step1_adjR2,2))
{
#cat("Percent variation in abundances explained by the Environmental variables\n")
cat(" adj R2 =",
round(100* adj_R2(Exp_var_by_Env, n = nrow(env), df = Step1_CCA_on_env$rank),2)   , "\n")
cat("Cumulatively across axes:\n")
print(round(100* Step1_adjR2,2))
}
cat("\nStep 2: weighted RDA(SNC~Traits)\n")
{
cat("Environmentally structured variation explained by traits:\n")
cat(" R2 =",round(100*R2_Env_variation_explained_by_Traits,1),"\n")
cat(" adj R2 =",
round(100* adj_R2(R2_Env_variation_explained_by_Traits, n = nrow(S_star), df = p_star),2)   , "\n")
cat("Cumulatively across axes:\n")
print(round(100* adpa1,2))
cat("Ratio of double (T,E) vs single (E) constrained eigenvalues\n (efficiency of the traits to explain\n  the environmentally structured variation) :\n")
print(round(eff1,2))
cat("P-value of the species-level test in dc-CA\n",p_value_species_level_test ,"\n")
}
eig <- Step2_wrRDA_SNC_on_Traits$eig
rFC <- sqrt(eig)
Chessels_correlation_ratio <- sqrt(Step2_wrRDA_SNC_on_Traits$eig/CA_on_Abun$eig[seq_along(Step2_wrRDA_SNC_on_Traits$eig)])
Explained_variance =  cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(CA_on_Abun$eig)
Explained_fitted_variation_cumulative <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step2_wrRDA_SNC_on_Traits$eig)
# final p-value
# p_max : maximum of p-values of the sample-level test and species-level test
p_max_dcCA <- max(c(p_value_sample_level_test, p_value_species_level_test))
# Environmental efficiencies of trait-structured variation:
# expressing how well do the environmental variables explain
# the trait-structured variation
# per eigenvector
adpa2 <- adj_R2(Fraction_trait_structured_variation_explained_by_env, n = nrow(R_star), df = q_star)
names(adpa2)<- names_axes
adpa1 <- adj_R2(Fraction_env_structured_variation_explained_by_traits, n = nrow(S_star), df = p_star)
names(adpa1)<- names_axes
eff2 <- Step4_wRDA_CWM_on_Env$eig/Step3_CCA_on_traits$eig[seq_along(Step4_wRDA_CWM_on_Env$eig)]
names(eff2)<-names_axes
# Same type of information expressed per eigenvector
# Trait efficiencies of environmentally structured variation:
# espressing how well do the traits explain the environmentally structured variation
eff1 <- Step2_wrRDA_SNC_on_Traits$eig/Step1_CCA_on_env$eig[seq_along(Step2_wrRDA_SNC_on_Traits$eig)]
names(eff1)<- names_axes
summary_dcCA <- rbind(eig, rFC, Chessels_correlation_ratio,100*Explained_variance,100*Explained_fitted_variation_cumulative,
100*adpa2,100*adpa1,eff2,eff1,Chessels_correlation_ratio^2)
rownames(summary_dcCA) <- c(" 1 dc-CA eigenvalues"," 2 fourth-corner correlations (rFC)", " 3 Chessel's correlation ratio",
" 4 % Explained variance (cum.)", " 5 % Explained fitted variation (cum.)",
" 6 % CWM variation expl. by E (adj R2)",
" 7 % SNC variation expl. by T (adj R2)",
" 8 Efficiency of extra E constraint",
" 9 Efficiency of extra T constraint",
"10 Efficiency of (T,E) vs no constraint")
```{r}
Step4_wRDA_CWM_on_Env <- Align_axes(Step2_wrRDA_SNC_on_Traits,Step3_CCA_on_traits,Step4_wRDA_CWM_on_Env)
library(ade4)
nrepet <- 999  # number of permutations in tests
adj_R2 <- function(R2_fraction, n, df){1-(1-R2_fraction)*(n-1)/(n-df-1)}
Align_axes <- function(Step2_wrRDA_SNC_on_Traits,Step3_CCA_on_traits,Step4_wRDA_CWM_on_Env){
# Align the direction of the axes by comparing the canonical/regression coefficients
#   already computed  in step 2 (Step2_wrRDA_SNC_on_Traits)
#   with those that follow from step 3  (Step3_CCA_on_traits) and step 4 (Step4_wRDA_CWM_on_Env)
#
#   From step 2 the canonical coefficients for traits are:
C_traits <- Step2_wrRDA_SNC_on_Traits$fa[-1,] # with scaling alpha = 0
# now compute the canonical coefficients for traits
# from steps 3 and 4 as in Appendix 2 of ter Braak, Dray, Smilauer 2018 Environmental and Ecological Statistics, 25, 171-197
B1 <- as.matrix(Step3_CCA_on_traits$fa[-1,])
B_star <- as.matrix(Step4_wRDA_CWM_on_Env$c1)
C_traits_check <- B1 %*%diag(1/sqrt(Step3_CCA_on_traits$eig)) %*% B_star %*% diag(sqrt(Step4_wRDA_CWM_on_Env$eig))
#C_traits_check/C_traits #columns are either +1 or  -1
flip <- diag(sign(C_traits_check[,1]/C_traits[1,]))
flip.f <- function(X, flip){
if (is.data.frame(X) && ncol(X)==nrow(flip) ) {
XX <- as.data.frame(as.matrix(X)%*%flip)
names(XX) <- names(X)
} else XX <- X
return(XX)
}
class_nam <- class(Step4_wRDA_CWM_on_Env)
Step4_wRDA_CWM_on_Env <- lapply(Step4_wRDA_CWM_on_Env, flip.f, flip)
class(Step4_wRDA_CWM_on_Env) <- class_nam
return(Step4_wRDA_CWM_on_Env)
} #end Align_axes
# step 6: clue steps together -------------------------------------------
eig <- Step2_wrRDA_SNC_on_Traits$eig
rFC <- sqrt(eig)
Chessels_correlation_ratio <- sqrt(Step2_wrRDA_SNC_on_Traits$eig/CA_on_Abun$eig[seq_along(Step2_wrRDA_SNC_on_Traits$eig)])
Explained_variance =  cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(CA_on_Abun$eig)
Explained_fitted_variation_cumulative <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step2_wrRDA_SNC_on_Traits$eig)
# final p-value
# p_max : maximum of p-values of the sample-level test and species-level test
p_max_dcCA <- max(c(p_value_sample_level_test, p_value_species_level_test))
# Environmental efficiencies of trait-structured variation:
# expressing how well do the environmental variables explain
# the trait-structured variation
# per eigenvector
adpa2 <- adj_R2(Fraction_trait_structured_variation_explained_by_env, n = nrow(R_star), df = q_star)
names(adpa2)<- names_axes
adpa1 <- adj_R2(Fraction_env_structured_variation_explained_by_traits, n = nrow(S_star), df = p_star)
names(adpa1)<- names_axes
eff2 <- Step4_wRDA_CWM_on_Env$eig/Step3_CCA_on_traits$eig[seq_along(Step4_wRDA_CWM_on_Env$eig)]
names(eff2)<-names_axes
# Same type of information expressed per eigenvector
# Trait efficiencies of environmentally structured variation:
# espressing how well do the traits explain the environmentally structured variation
eff1 <- Step2_wrRDA_SNC_on_Traits$eig/Step1_CCA_on_env$eig[seq_along(Step2_wrRDA_SNC_on_Traits$eig)]
names(eff1)<- names_axes
summary_dcCA <- rbind(eig, rFC, Chessels_correlation_ratio,100*Explained_variance,100*Explained_fitted_variation_cumulative,
100*adpa2,100*adpa1,eff2,eff1,Chessels_correlation_ratio^2)
rownames(summary_dcCA) <- c(" 1 dc-CA eigenvalues"," 2 fourth-corner correlations (rFC)", " 3 Chessel's correlation ratio",
" 4 % Explained variance (cum.)", " 5 % Explained fitted variation (cum.)",
" 6 % CWM variation expl. by E (adj R2)",
" 7 % SNC variation expl. by T (adj R2)",
" 8 Efficiency of extra E constraint",
" 9 Efficiency of extra T constraint",
"10 Efficiency of (T,E) vs no constraint")
R2_Env_variation_explained_by_Traits <- sum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig)
# per axis
Fraction_env_structured_variation_explained_by_traits <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig) #
names_axes <- paste("Axis",seq_along(Step2_wrRDA_SNC_on_Traits$eig))
names(Fraction_env_structured_variation_explained_by_traits)<- names_axes
# Species-level significance test
Species_level_test <- randtest(Step2_wrRDA_SNC_on_Traits, nrepet = nrepet)
Species_level_test
p_value_species_level_test <- Species_level_test$pvalue
# weighted RDA(S^*~Traits):
pca_S_star <- dudi.pca(S_star, row.w = Step1_CCA_on_env$cw,
scale = FALSE, scannf = FALSE, nf = ncol(S_star))
Step2_wrRDA_SNC_on_Traits <- pcaiv(pca_S_star, trait, scannf = FALSE,
nf = ncol(trait))
CA_on_Abun <- dudi.coa(abu, scannf = F)
Step1_CCA_on_env <- pcaiv(CA_on_Abun, env, scannf = F, nf = ncol(env)) # CCA1
S_star <- Step1_CCA_on_env$co
dim(S_star)
q_star <- ncol(S_star)
# weighted RDA(S^*~Traits):
pca_S_star <- dudi.pca(S_star, row.w = Step1_CCA_on_env$cw,
scale = FALSE, scannf = FALSE, nf = ncol(S_star))
Step2_wrRDA_SNC_on_Traits <- pcaiv(pca_S_star, trait, scannf = FALSE,
nf = ncol(trait))
R2_Env_variation_explained_by_Traits <- sum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig)
# per axis
Fraction_env_structured_variation_explained_by_traits <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig) #
names_axes <- paste("Axis",seq_along(Step2_wrRDA_SNC_on_Traits$eig))
names(Fraction_env_structured_variation_explained_by_traits)<- names_axes
R2_Env_variation_explained_by_Traits
Fraction_env_structured_variation_explained_by_traits
names_axes
Fraction_env_structured_variation_explained_by_traits
R2_Env_variation_explained_by_Traits
R2_Env_variation_explained_by_Traits <- sum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig)
# per axis
Fraction_env_structured_variation_explained_by_traits <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig) #
names_axes <- paste("Axis",seq_along(Step2_wrRDA_SNC_on_Traits$eig))
names(Fraction_env_structured_variation_explained_by_traits)<- names_axes
Fraction_env_structured_variation_explained_by_traits
R2_Env_variation_explained_by_Traits <- sum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig)
R2_Env_variation_explained_by_Traits
# per axis
Fraction_env_structured_variation_explained_by_traits <- cumsum(Step2_wrRDA_SNC_on_Traits$eig)/sum(Step1_CCA_on_env$eig) #
names_axes <- paste("Axis",seq_along(Step2_wrRDA_SNC_on_Traits$eig))
names(Fraction_env_structured_variation_explained_by_traits)<- names_axes
Fraction_env_structured_variation_explained_by_traits
# Species-level significance test
Species_level_test <- randtest(Step2_wrRDA_SNC_on_Traits, nrepet = nrepet)
Species_level_test
p_value_species_level_test <- Species_level_test$pvalue
Species_level_test
p_star <- qr(model.matrix(~ as.matrix(trait)))$rank-1
Step4_wRDA_CWM_on_Env <- pcaiv(pca_R_star, env, scannf = FALSE,
nf = ncol(env))
# weighted RDA(R^*~Env)
pca_R_star <- dudi.pca(R_star, row.w = Step1_CCA_on_env$lw, scale = FALSE,
scannf = FALSE, nf = ncol(R_star))
Step4_wRDA_CWM_on_Env <- pcaiv(pca_R_star, env, scannf = FALSE,
nf = ncol(env))
Step4_wRDA_CWM_on_Env$eig/sum(Step3_CCA_on_traits$eig) #
R2_Trait_variation_explained_by_Env <- sum(Step4_wRDA_CWM_on_Env$eig)/sum(Step3_CCA_on_traits$eig)
# expressed as percentage
#round(100*R2_Trait_variation_explained_by_Env,1)
Fraction_trait_structured_variation_explained_by_env <- cumsum(Step4_wRDA_CWM_on_Env$eig)/sum(Step3_CCA_on_traits$eig) #
names(Fraction_trait_structured_variation_explained_by_env)<- names_axes
# sample-level test
Sample_level_test <- randtest(Step4_wRDA_CWM_on_Env, nrepet = nrepet)
Sample_level_test
p_value_sample_level_test <- Sample_level_test$pvalue
# expressed as percentage
round(100*R2_Trait_variation_explained_by_Env,1)
Fraction_trait_structured_variation_explained_by_env <- cumsum(Step4_wRDA_CWM_on_Env$eig)/sum(Step3_CCA_on_traits$eig) #
names(Fraction_trait_structured_variation_explained_by_env)<- names_axes
# sample-level test
Sample_level_test <- randtest(Step4_wRDA_CWM_on_Env, nrepet = nrepet)
Sample_level_test
p_value_sample_level_test <- Sample_level_test$pvalue
p_value_sample_level_test
Sample_level_test
p_value_sample_level_test <- Sample_level_test$pvalue
# sample-level test
Sample_level_test <- randtest(Step4_wRDA_CWM_on_Env, nrepet = nrepet)
Sample_level_test
p_value_sample_level_test <- Sample_level_test$pvalue
